
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр Прибыль (Товары)
	// Расчет себестоимости в зависимости от метода списания FIFO, LIFO, ПоСреднему
	// Проверяем метод списания на дату документа Реализации
	ТекМетодСписания = Расчетный.ОпределениеМетодаСписания(Дата);
	
	
	// Создаем ТЗ для сохранения списанных из регистра остатков
	ТоварыНаРеализацию = Новый ТаблицаЗначений;	
	ТоварыНаРеализацию.Колонки.Добавить("Номенклатура");
	ТоварыНаРеализацию.Колонки.Добавить("Характеристика");
	ТоварыНаРеализацию.Колонки.Добавить("Количество");
	ТоварыНаРеализацию.Колонки.Добавить("Цена");
	
	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		// Формируем список значений характеристик
		ТекСписокХарактеристик = Расчетный.УпорядочитьХарактеристикиНоменклатуры(ТекСтрокаТовары.Номенклатура,ТекМетодСписания);
		ТекСрЦена = Расчетный.СредняяЦена(ТекСтрокаТовары.Номенклатура);
		
		// Обнуляем текущие значения
		ТекКоличество = 0;
		ТекСтоимость= 0;
		ТекЭлементМассива="";
		// Выборка по всем найденным характеристикам
		Если ТекСписокХарактеристик<>Ложь Тогда 
		Для Каждого ЭлементМассива Из ТекСписокХарактеристик Цикл
			Если ТекЭлементМассива<>ЭлементМассива Тогда
				СтрокаТЗ = ТоварыНаРеализацию.Добавить();
				ТекЭлементМассива = ЭлементМассива;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
			|	ЗакупочныеЦеныСрезПоследних.Цена КАК Цена
			|ИЗ
			|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗакупочныеЦены.СрезПоследних КАК ЗакупочныеЦеныСрезПоследних
			|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗакупочныеЦеныСрезПоследних.Номенклатура
			|			И ТоварыНаСкладахОстатки.Характеристика = ЗакупочныеЦеныСрезПоследних.Характеристика
			|ГДЕ
			|	ТоварыНаСкладахОстатки.Характеристика = &Характеристика
			|	И ТоварыНаСкладахОстатки.Номенклатура = &Номенклатура";
		
			Запрос.УстановитьПараметр("Номенклатура", ТекСтрокаТовары.Номенклатура);
			Запрос.УстановитьПараметр("Характеристика", ЭлементМассива);
			
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ВыборкаДетальныеЗаписи.Следующий(); 
			
			КоличествоПоТекХарактеристики = ВыборкаДетальныеЗаписи.КоличествоОстаток;
			
						
		
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			
			ТекКоличество = ТекКоличество+КоличествоПоТекХарактеристики;
			
			Если ТекКоличество < ТекСтрокаТовары.Количество Тогда
				//Временная таблица значений
				СтрокаТЗ.Номенклатура = ТекСтрокаТовары.Номенклатура;
				СтрокаТЗ.Характеристика = ЭлементМассива;
				СтрокаТЗ.Количество = КоличествоПоТекХарактеристики;
				Если ТекМетодСписания = Справочники.МетодыСписанияСебестоимости.ПоСреднему.Наименование Тогда
					СтрокаТЗ.Цена = ТекСрЦена;	
				Иначе
					СтрокаТЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
				КонецЕсли;
				СтрокаТЗ = ТоварыНаРеализацию.Добавить();
				
				//Запишем движение в регистр ТоварыНаСкладах
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.Характеристика = ЭлементМассива;
				Движение.Количество = КоличествоПоТекХарактеристики;
				Продолжить;
			ИначеЕсли ТекКоличество > ТекСтрокаТовары.Количество Тогда
				//Временная таблица значений
				СтрокаТЗ.Номенклатура = ТекСтрокаТовары.Номенклатура;
				СтрокаТЗ.Характеристика = ЭлементМассива;
				СтрокаТЗ.Количество = КоличествоПоТекХарактеристики - Расчетный.МодульЧисла(ТекКоличество - ТекСтрокаТовары.Количество);
				Если ТекМетодСписания = Справочники.МетодыСписанияСебестоимости.ПоСреднему.Наименование Тогда
					СтрокаТЗ.Цена = ТекСрЦена;	
				Иначе
					СтрокаТЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
				КонецЕсли;
				//СтрокаТЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
				
				//Запишем движение в регистр ТоварыНаСкладах
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.Характеристика = ЭлементМассива;
				Движение.Количество = КоличествоПоТекХарактеристики - Расчетный.МодульЧисла(ТекКоличество - ТекСтрокаТовары.Количество);
				Прервать;
			ИначеЕсли ТекКоличество = ТекСтрокаТовары.Количество Тогда
				//Временная таблица значений
				СтрокаТЗ.Номенклатура = ТекСтрокаТовары.Номенклатура;
				СтрокаТЗ.Характеристика = ЭлементМассива;
				СтрокаТЗ.Количество = ТекКоличество;
				Если ТекМетодСписания = Справочники.МетодыСписанияСебестоимости.ПоСреднему.Наименование Тогда
					СтрокаТЗ.Цена = ТекСрЦена;	
				Иначе
					СтрокаТЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
				КонецЕсли;
				//СтрокаТЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
				
				//Запишем движение в регистр ТоварыНаСкладах
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.Характеристика = ЭлементМассива;
				Движение.Количество = ТекКоличество;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	//Проверка на отр. остатки
	Движения.ТоварыНаСкладах.записать();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК ОбщееКоличество,
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ОбщееКоличествоПоНом
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(, ) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоПоТекХарактеристики,
		|	РеализацияТоваровУслугТовары.Количество КАК ЗапрашиваемоеКоличество,
		|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|	ВТ_ОбщееКоличествоПоНом.ОбщееКоличество КАК ОбщееКоличество
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбщееКоличествоПоНом КАК ВТ_ОбщееКоличествоПоНом
		|			ПО (ВТ_ОбщееКоличествоПоНом.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура)
		|		ПО ТоварыНаСкладахОстатки.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если  ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Недостача = ВыборкаДетальныеЗаписи.ОбщееКоличество-ВыборкаДетальныеЗаписи.ЗапрашиваемоеКоличество;
			Сообщить("Не достаточно товара " + ВыборкаДетальныеЗаписи.Номенклатура + "в количестве " + Недостача); 
		КонецЦикла;
		Отказ = Истина;
	КонецЕсли;	
	
	Движения.Прибыль.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		ТекНом = ТекСтрокаТовары.Номенклатура;
		СебеСтоимость = 0;
		Движение = Движения.Прибыль.Добавить();
		Для Каждого СтрокаТЗ из ТоварыНаРеализацию Цикл
			Если ТекНом = СтрокаТЗ.Номенклатура Тогда;
				Движение.Период = Дата;
				СебеСтоимость = СебеСтоимость + СтрокаТЗ.Количество*СтрокаТЗ.Цена;
				Движение.Номенклатура = СтрокаТЗ.Номенклатура;
				Движение.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар;
				Движение.Сумма = ТекСтрокаТовары.Стоимость - СебеСтоимость;
			КонецЕсли;	
		КонецЦикла
	КонецЦикла;

	// регистр Прибыль  (Услуги)
	Движения.Прибыль.Записывать = Истина;
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.Прибыль.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаУслуги.Номенклатура;
		Движение.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга;
		Движение.Сумма = ТекСтрокаУслуги.Стоимость; 
	КонецЦикла;
КонецПроцедуры
